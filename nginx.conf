worker_processes  2;
events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;

    gzip on;
    gzip_min_length 1000;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;

    client_max_body_size 10M;

        # Backend server
        server {
            server_name mmserver.ml;
            error_page   500 502 503 504  /50x.html;

            # on all /server request navigate to fastapi server
            location /images/ {
                root /usr/arrange;
            }

            location / {
                if ($request_method ~* "(GET|POST|PUT|DELETE)") {
                    add_header "Access-Control-Allow-Origin"  *;
                    add_header "Access-Control-Allow-Methods" "GET, POST, PUT, DELETE, OPTIONS, HEAD";
                    add_header "Access-Control-Allow-Credentials" "true";
                    add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
                }

                # Preflighted requests
                if ($request_method = OPTIONS ) {
                    add_header "Access-Control-Allow-Origin"  *;
                    add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, HEAD";
                    add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
                    return 200;
                }
                proxy_pass http://localhost:8000;
            }


    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/mmadmin.ml/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/mmadmin.ml/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

        server {
            server_name mmclient.ml;
            error_page   500 502 503 504  /50x.html;

            location / {
                root /var/lib/jenkins/workspace/mm_client_webapp/build;
                index  index.html index.htm;
            }


    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/mmadmin.ml/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/mmadmin.ml/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}


        server {
            server_name mmadmin.ml;
            error_page   500 502 503 504  /50x.html;

            location / {
                root /var/lib/jenkins/workspace/mm_admin_dashboard/build;
                index  index.html index.htm;
            }


    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/mmadmin.ml/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/mmadmin.ml/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}






        server {
    if ($host = mmadmin.ml) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


            server_name mmadmin.ml;
    listen 80;
    return 404; # managed by Certbot


}

        server {
    if ($host = mmclient.ml) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


            server_name mmclient.ml;
    listen 80;
    return 404; # managed by Certbot


}
        server {
    if ($host = mmserver.ml) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


            server_name mmserver.ml;
    listen 80;
    return 404; # managed by Certbot


}}